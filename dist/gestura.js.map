{"version":3,"sources":["dist/gestura.js"],"names":["global","factory","exports","module","define","amd","gestura","this","trigger","el","event","data","document","querySelector","createEvent","evtObj","initEvent","dispatchEvent","console","error","window","navigator","pointerEnabled","eventStart","eventEnd","eventMove","eventCancel","msPointerEnabled","gestures","touchTimeout","swipeTimeout","tapTimeout","longTapTimeout","now","delta","body","touch","singleTapDelay","parentIfText","node","parentNode","longTap","last","err","cancelLongTap","clearTimeout","cancelAll","test","userAgent","addEventListener","e","Date","target","x1","y1","length","isDoubleTap","setTimeout","x2","y2","move","Math","abs","direction","preventDefault","disableTextSelection","element","all","Array","prototype","slice","call","querySelectorAll","map","classList","add","stylesheet","head","createElement","className","innerHTML","appendChild","enableTextSelection","remove"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.gestura = {})));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * @type {string} eventStart\n   */\n\n  /**\n   * @type {string} eventEnd\n   */\n\n  /**\n   * @type {string} eventMove\n   */\n\n  /**\n   * @type {string} eventCancel\n   */\n\n\n  // Pointer events for IE11 and MSEdge:\n  if (window.navigator.pointerEnabled) {\n    exports.eventStart = 'pointerdown';\n    exports.eventEnd = 'pointerup';\n    exports.eventMove = 'pointermove';\n    exports.eventCancel = 'pointercancel';\n\n    // Pointer events for IE10 and WP8:\n  } else if (window.navigator.msPointerEnabled) {\n    exports.eventStart = 'MSPointerDown';\n    exports.eventEnd = 'MSPointerUp';\n    exports.eventMove = 'MSPointerMove';\n    exports.eventCancel = 'MSPointerCancel';\n\n    // Touch events for iOS & Android:\n  } else if ('ontouchstart' in window) {\n    exports.eventStart = 'touchstart';\n    exports.eventEnd = 'touchend';\n    exports.eventMove = 'touchmove';\n    exports.eventCancel = 'touchcancel';\n\n    // Mouse events for desktop:\n  } else {\n    exports.eventStart = 'mousedown';\n    exports.eventEnd = 'mouseup';\n    exports.eventMove = 'mousemove';\n    exports.eventCancel = 'mouseout';\n  }\n\n  /**\n   * Fire a gesture on an element and pass it some optional data.\n   * @param {Element} el\n   * @param {string} event\n   * @param {*} [data]\n   */\n  function trigger(el, event, data) {\n    if (!event) {\n      console.error('No event was provided. You do need to provide one.');\n      return\n    }\n    if (typeof el === 'string') el = document.querySelector(el);\n    if (document.createEvent) {\n      var evtObj = document.createEvent('Events');\n      evtObj.initEvent(event, true, false);\n      evtObj['data'] = data;\n      el.dispatchEvent(evtObj);\n    }\n  }\n\n  /**\n   * Enable gestures in the browser.\n   * @return {void} undefined\n   */\n  var gestures = function() {\n    var touch = {};\n    var touchTimeout;\n    var swipeTimeout;\n    var tapTimeout;\n    var longTapDelay = 750;\n    var singleTapDelay = 150;\n    var gestureLength = 20;\n    if (/android/gim.test(navigator.userAgent)) singleTapDelay = 200;\n    var longTapTimeout;\n\n    /**\n     * @param {Node} node\n     */\n    function parentIfText(node) {\n      return 'tagName' in node ? node : node.parentNode\n    }\n\n    /**\n     * @param {number} x1\n     * @param {number} x2\n     * @param {number} y1\n     * @param {number} y2\n     */\n    function swipeDirection(x1, x2, y1, y2) {\n      return Math.abs(x1 - x2) >= Math.abs(y1 - y2)\n        ? x1 - x2 > 0\n          ? 'left'\n          : 'right'\n        : y1 - y2 > 0\n          ? 'up'\n          : 'down'\n    }\n\n    function longTap() {\n      longTapTimeout = null;\n      if (touch.last) {\n        try {\n          if (touch && touch.el) {\n            trigger(touch.el, 'longtap');\n            touch = {};\n          }\n        } catch (err) {}\n      }\n    }\n\n    function cancelLongTap() {\n      if (longTapTimeout) clearTimeout(longTapTimeout);\n      longTapTimeout = null;\n    }\n\n    function cancelAll() {\n      if (touchTimeout) clearTimeout(touchTimeout);\n      if (tapTimeout) clearTimeout(tapTimeout);\n      if (swipeTimeout) clearTimeout(swipeTimeout);\n      if (longTapTimeout) clearTimeout(longTapTimeout);\n      touchTimeout = tapTimeout = swipeTimeout = longTapTimeout = null;\n      touch = {};\n    }\n  (function() {\n      var now;\n      var delta;\n      var body = document.body;\n\n      /**\n       * Capture start of event:\n       */\n      body.addEventListener(exports.eventStart, function(e) {\n        now = Date.now();\n        delta = now - (touch.last || now);\n\n        if (exports.eventStart !== 'touchstart') {\n          touch.el = parentIfText(/** @type{Node} */ (e.target));\n          if (e.target['nodeName'] === 'ripple') {\n            touch.el = e.target['parentNode'];\n          }\n          touchTimeout && clearTimeout(touchTimeout);\n          touch.x1 = e['pageX'];\n          touch.y1 = e['pageY'];\n\n          /**\n           * Detect one finger gesture:\n           */\n        } else {\n          if (e['touches'].length === 1) {\n            if (!!e.target['disabled']) return\n            touch.el = parentIfText(e['touches'][0].target);\n            touchTimeout && clearTimeout(touchTimeout);\n            touch.x1 = e['touches'][0]['pageX'];\n            touch.y1 = e['touches'][0]['pageY'];\n          }\n        }\n\n        if (delta > 0 && delta <= 450) {\n          touch.isDoubleTap = true;\n        }\n        touch.last = now;\n        longTapTimeout = setTimeout(longTap, longTapDelay);\n      });\n\n      /**\n       * Capture event move:\n       */\n      body.addEventListener(exports.eventMove, function(e) {\n        cancelLongTap();\n        if (exports.eventMove !== 'touchmove') {\n          touch.x2 = e['pageX'];\n          touch.y2 = e['pageY'];\n        } else {\n          /**\n           * One finger gesture:\n           */\n          if (e['touches'].length === 1) {\n            touch.x2 = e['touches'][0]['pageX'];\n            touch.y2 = e['touches'][0]['pageY'];\n            touch.move = true;\n          } else if (e['touches'].length === 2) {\n            // TODO: pinch - rotate gestures?\n          }\n        }\n      });\n\n      /**\n       * Capture event end:\n       */\n      body.addEventListener(exports.eventEnd, function(e) {\n        cancelLongTap();\n        if (!!touch.el) {\n          /**\n           * Swipe detection:\n           */\n          if (\n            (touch.x2 && Math.abs(touch.x1 - touch.x2) > gestureLength) ||\n            (touch.y2 && Math.abs(touch.y1 - touch.y2) > gestureLength)\n          ) {\n            swipeTimeout = setTimeout(function() {\n              if (touch && touch.el) {\n                var direction = swipeDirection(\n                  touch.x1,\n                  touch.x2,\n                  touch.y1,\n                  touch.y2\n                );\n                trigger(touch.el, 'swipe', direction);\n                trigger(touch.el, 'swipe' + direction);\n                touch = {};\n              }\n            }, 0);\n\n            /**\n             * Normal tap:\n             */\n          } else if ('last' in touch) {\n            /**\n             * Delay by one tick so we can cancel the 'tap' event if 'scroll' fires:\n             */\n            tapTimeout = setTimeout(function() {\n              /**\n               * Trigger double tap immediately:\n               */\n              if (touch && touch.isDoubleTap) {\n                if (touch && touch.el) {\n                  trigger(touch.el, 'dbltap');\n                  e.preventDefault();\n                  touch = {};\n                }\n              } else {\n                /**\n                 * Trigger tap after singleTapDelay:\n                 */\n                touchTimeout = setTimeout(function() {\n                  touchTimeout = null;\n                  if (touch && touch.el && !touch.move) {\n                    trigger(touch.el, 'tap');\n                    touch = {};\n                  } else {\n                    /**\n                     * Touch moved, so cancel tap:\n                     */\n                    cancelAll();\n                  }\n                }, singleTapDelay);\n              }\n            }, 0);\n          }\n        } else {\n          return\n        }\n      });\n      body.addEventListener('touchcancel', cancelAll);\n    })();\n  };\n\n  /**\n   * Function to disable text selection. Use with make swipe events not select the element's text.\n   * @param {Element} element\n   * @param {string | boolean} [all]\n   * @return {void} undefined\n   */\n  function disableTextSelection(element, all) {\n    if (!element) return\n    if (all && typeof element === 'string') {\n      var elements = Array.prototype.slice.call(\n        document.querySelectorAll(element)\n      );\n      elements.map(function(element) {\n        element.classList.add('disable-user-select');\n      });\n    } else {\n      if (typeof element === 'string') {\n        element = document.querySelector(element);\n        element.classList.add('disable-user-select');\n      }\n    }\n    var stylesheet = document.head.querySelector('.disable-user-select');\n    if (!stylesheet) {\n      stylesheet = document.createElement('style');\n      stylesheet.className = 'disable-user-select';\n      stylesheet.innerHTML =\n        '.disable-user-select, .disable-user-select * { user-select: none; -webkit-user-select: none; -ms-user-select: none; }';\n      document.head.appendChild(stylesheet);\n    }\n  }\n\n  /**\n   * Function to remove a style set to disable text selection. This will re-enable text selection.\n   * @param {Element} element\n   * @param {string | boolean} all\n   * @return {void} undefined\n   */\n  function enableTextSelection(element, all) {\n    if (all && typeof element === 'string') {\n      var elements = Array.prototype.slice.call(\n        document.querySelectorAll(element)\n      );\n      elements.map(function(element) {\n        element.classList.remove('disable-user-select');\n      });\n    } else {\n      if (typeof element === 'string') element = document.querySelector(element);\n      if (!element) return\n      element.classList.remove('disable-user-select');\n    }\n  }\n\n  exports.trigger = trigger;\n  exports.gestures = gestures;\n  exports.disableTextSelection = disableTextSelection;\n  exports.enableTextSelection = enableTextSelection;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=gestura.js.map\n"]}